package com.psc.view.frmrelatorio;

import java.awt.Color;
import java.awt.Component;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 * @author natan
 */
public class FrmRelatorio extends javax.swing.JFrame {

    DefaultTableModel modeloTabela;

    /**
     * Creates new form FrmRelatorio
     */
    public FrmRelatorio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JCSeletor = new javax.swing.JComboBox<>();
        JBGerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaRelatorio = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Relatorio do Estoque");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 36)); // NOI18N
        jLabel1.setText("Relatórios de Estoque");

        JCSeletor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Lista de Preços dos produtos", "Balanço Físico e Financeiro dos produtos", "Produtos abaixo da quantidade minima", "Produto acima da quantidade maxima", "Relação de produtos por categoria"}));
        JCSeletor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCSeletorActionPerformed(evt);
            }
        });

        JBGerar.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        JBGerar.setText("Gerar Relatório");
        JBGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBGerarActionPerformed(evt);
            }
        });

        TabelaRelatorio.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(TabelaRelatorio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(JCSeletor, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(55, 55, 55)
                                                .addComponent(JBGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel1)
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(JCSeletor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JBGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBGerarActionPerformed
        int tipoRelatorio = JCSeletor.getSelectedIndex();
        switch (tipoRelatorio) {
            case 0: /* Relatorio de lista de precos */
                modeloTabela = new DefaultTableModel();
                modeloTabela.setColumnIdentifiers(new String[]{"ID", "Nome", "Preço", "Unidade de medida", "Categoria"});
                modeloTabela.addRow(new Object[]{"001", "Produto A", "R$ 10,00", "KG", "Alimentos"});
                modeloTabela.addRow(new Object[]{"002", "Produto B", "R$ 25,50", "Litros", "Limpeza"});
                TabelaRelatorio.setModel(modeloTabela);
                break;
            case 1: /* Relatorio de balanco fisico e financeiro*/
                modeloTabela = new DefaultTableModel();
                modeloTabela.setColumnIdentifiers(new String[]{"ID", "Nome", "Quantidade", "Valor Unitario", "Valor Total"});
                modeloTabela.addRow(new Object[]{"001", "Produto A", "10", "R$ 5,00", "R$ 50,00"});
                modeloTabela.addRow(new Object[]{"002", "Produto B", "25", "R$ 10", "R$ 250"});
                TabelaRelatorio.setModel(modeloTabela);
                break;
            case 2: /* Relatorio de produtos abaixo da quantidade minima*/
                modeloTabela = new DefaultTableModel();
                modeloTabela.setColumnIdentifiers(new String[]{"ID", "Nome", "Quantidade Minima", "Quantidade Atual", "Status"});
                modeloTabela.addRow(new Object[]{"001", "Produto A", "5", "1", "Baixo"});
                modeloTabela.addRow(new Object[]{"002", "Produto B", "20", "25", "Normal"});
                TabelaRelatorio.setModel(modeloTabela);

                DefaultTableCellRenderer rendererStatus = new DefaultTableCellRenderer() {
                    private final Icon iconeBaixo = new ImageIcon(getClass().getResource("/FRAMEestoque_baixo.png"));
                    private final Icon iconeNormal = new ImageIcon(getClass().getResource("/FRAMEestoque_normal.png"));

                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                                                                   boolean hasFocus, int row, int column) {

                        JLabel label = new JLabel();
                        label.setOpaque(true);

                        String status = value.toString();

                        // Define texto e ícone
                        if (status.equalsIgnoreCase("Baixo")) {
                            label.setText("Baixo");
                            label.setIcon(iconeBaixo);
                            label.setForeground(Color.RED);
                        } else if (status.equalsIgnoreCase("Normal")) {
                            label.setText("Normal");
                            label.setIcon(iconeNormal);
                            label.setForeground(new Color(0, 128, 0));
                        } else {
                            label.setText(status);
                            label.setForeground(Color.BLACK);
                        }

                        // Alinha texto e ícone
                        label.setHorizontalTextPosition(SwingConstants.RIGHT);
                        label.setIconTextGap(8); // espaço entre ícone e texto

                        // Seleção
                        if (isSelected) {
                            label.setBackground(table.getSelectionBackground());
                        } else {
                            label.setBackground(Color.WHITE);
                        }

                        return label;
                    }
                };

                // Aplica o renderizador à coluna "Status"
                TabelaRelatorio.getColumnModel().getColumn(4).setCellRenderer(rendererStatus);
                break;
            case 3: /* Relatorio de produtos acima da quantidade maxima*/
                modeloTabela = new DefaultTableModel();
                modeloTabela.setColumnIdentifiers(new String[]{"ID", "Nome", "Quantidade Maxima", "Quantidade Atual"});
                modeloTabela.addRow(new Object[]{"001", "Produto A", "100", "10"});
                modeloTabela.addRow(new Object[]{"002", "Produto B", "80", "25"});
                TabelaRelatorio.setModel(modeloTabela);
                break;
            case 4: /* Relatorio de relacao de produto categoria */
                modeloTabela = new DefaultTableModel();
                modeloTabela.setColumnIdentifiers(new String[]{"Categoria", "Quantidade Produtos"});
                modeloTabela.addRow(new Object[]{"Autopecas", "10"});
                modeloTabela.addRow(new Object[]{"Eletrodomestico", "5"});
                TabelaRelatorio.setModel(modeloTabela);
                break;

            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_JBGerarActionPerformed

    private void JCSeletorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCSeletorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCSeletorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBGerar;
    private javax.swing.JComboBox<String> JCSeletor;
    private javax.swing.JTable TabelaRelatorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
